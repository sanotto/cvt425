*SRCMBRTXT:Genera BALANCE.TXT                     
     H DFTACTGRP(*NO) ACTGRP(*NEW)
     H BNDDIR('QC2LE')
     H DEBUG
     H*****************************************************************
     H*                                                               *
     H*  SYSTEM NAME: SIDEBA - FORMULAS DEL BCRA.                     *
     H*                                                               *
     H*  PROGRAM NAME: Genera Balance.txt                             *
     H*                Convierte CO4201CD a plano.                    *
     H*                                                               *
     H*  PROGRAM NO: COC026R2                                         *
     H*                                                               *
     H*  DATE:    12/07/2006                                          *
     H*                                                               *
     H*  AUTHOR:  SERGIO CORTES                                       *
     H*                                                               *
     F*----------------------------------------------------------------*
     FCO4201CD  IP   E             DISK
     FCOMESA    IF   E           K DISK
     FSGSYSV    IF   E             DISK
     FBATEMP    UF A E             DISK
     ***************************************************************************
     ** PROTOTIPOS DE FUNCIONES PARA ACCEDER A IFS - COMIENZO
     ***************************************************************************
     D*-------------------------------------------------------------------------
     D*>DATASTRUCTURE : SYSERR
     D*>DESCRIPTION   : Data structure to receive error generated by OPM APIS
     D*>USE           : Retrieve OPM API Error codes
     D*>RELATEDFUNCT  : sysSndPgmMsg
     D*-------------------------------------------------------------------------
      /IF NOT DEFINED(SYSERR_DEFINED)
      /DEFINE SYSERR_DEFINED
     D SYSERR          DS
     D  dsECBytesP             1      4I 0 INZ(256)
     D  dsECBytesA             5      8I 0 INZ(0)
     D  dsECMsgID              9     15
     D  dsECReserv            16     16
     D  dsECMsgDta            17    256
      /ENDIF

     D Cvt2Asc         PR
     D  StrPtr                         *   value
     D  StringLen                     4S 0 value
     D*------------------------------------------------------------------------
     D*>DESCRIPTION   : Sends a program message
     D*>RETURNS       : A string containing the message key generated by the Sy
     D*>PARAMETER     : A string containig MSGI
     D*>PARAMETER     : A string containig MSGF LIB (OPT)
     D*>PARAMETER     : A string containig User data (OPT)
     D*>USAGE         : Eval      rc=sysSndPgmMsg('CPF9801':'QCPFMSG   *LIBL
     D*------------------------------------------------------------------------
     D  sysSndPgmMsg   PR             4A
     D   msgID                        7A   CONST
     D   msgF                        20A   CONST OPTIONS(*NOPASS)
     D   msgDta                     256A   CONST OPTIONS(*NOPASS)
     D   msgType                     10A   CONST OPTIONS(*NOPASS)
     D*------------------------------------------------------------------------

      *********************************************************
      * Definitions needed to make IFS API calls.  Note that
      * these should really be in a separate /copy file]
      *********************************************************
     D O_WRONLY        C                   2
     D SEEK_SET        C                   0
     D O_RDWR          C                   4
     D O_CREAT         C                   8
     D O_CCSID         C                   32
     D O_TRUNC         C                   64
     D O_CODEPAGE      C                   8388608
     D O_TEXTDATA      C                   16777216

     D open            PR            10I 0 ExtProc('open')
     D  filename                       *   value options(*string)
     D  openflags                    10I 0 value
     D  mode                         10U 0 value options(*nopass)
     D  codepage                     10U 0 value options(*nopass)

     D fseek           PR            10I 0 ExtProc('fseek')
     D  filehandler                  10I 0 value
     D  fileoffset                   10I 0 value
     D  start_pos                    10I 0 value

     D unlink          PR            10I 0 ExtProc('unlink')
     D   path                          *   Value options(*string)

     D write           PR            10I 0 ExtProc('write')
     D  handle                       10I 0 value
     D  buffer                         *   value
     D  bytes                        10U 0 value

     D Close           PR            10I 0 ExtProc('close')
     D   Sock_Desc                   10I 0 Value

     D*--------------------------------------------------------------------
     D* Read From a File
     D*
     D* ssize_t read(int handle, void *buffer, size_t bytes);
     D*--------------------------------------------------------------------
     D read            PR            10I 0 ExtProc('read')
     D  handle                       10i 0 value
     D  buffer                         *   value
     D  bytes                        10U 0 value
     ***************************************************************************
     ** PROTOTIPOS DE FUNCIONES PARA ACCEDER A IFS - FINAL
     ***************************************************************************
     D*----------------------------------------------------------------*
     D                 DS
     D  DSTODO                 1     34
     D  DSCDIS                 1      4  0
     D  DSICEN                 5      9  0
     D  DSIFEC                10     15  0
     D  DSICCU                16     21  0
     D  DSISIG                22     22
     D  DSIIMP                23     33  0
     D  DSIRBC                34     34
     D*
     D*----------------------------------------------------------------*
     D FECINVDS        DS
     D  FECINV                 1      8  0
     D  AÑOINV                 1      4  0
     D  MESINV                 5      6  0
     D  DIAINV                 7      8  0
     D FECNORDS        DS
     D  FECNOR                 1      8  0
     D  DIANOR                 1      2  0
     D  MESNOR                 3      4  0
     D  AÑONOR                 5      8  0
     D FECUSADS        DS
     D  FECUSA                 1     10
     D  MESUSA                 1      2  0
     D                         3      3    INZ('/')
     D  DIAUSA                 4      5  0
     D                         6      6    INZ('/')
     D  AÑOUSA                 7     10  0
     D CONVIECTA       DS
     D  NQICCU                 1      6  0
     D    WWICTL               1      1  0
     D    WWIRUR               2      2  0
     D    WWIMCO               3      3  0
     D    WWINCC               4      6  0
     D*----------------------------------------------------------------*
     D* Declaracion de Variables
     D*----------------------------------------------------------------*
     D PATSTR          S            255
     D FilHnd          S             10I 0
     D HdrBuf          S            255
     D*----------------------------------------------------------------*
     C*
     C*
     C                   EXSR      LIMPIA
     C                   EXSR      SRPROC
     CLR                 EXSR      FINALI
     C*----------------------------------------------------------------*
     C* INICIO - Busca datos para inicio del programa
     C*----------------------------------------------------------------*
     C     *INZSR        BEGSR
     C*
     C*
     C     1             CHAIN     RESGSYSV                           99
     C*
     C* ... Abrir el archivo con codepage 1252 (Ascii)
     C                   TIME                    AUXTIM            6 0
     C                   MOVE      AUXTIM        TIMGEN            6
     C                   MOVE      AASFEI        FECCHR            8
     C                   EVAL      PATSTR='/HOME/REGIMEN_INFORMATIVO/'+
     C                                    'BALANCE_CONSOLIDADO_GENERADO_'
     C                                    +FECCHR+'_'+TIMGEN+'.TXT'
     c                   EVAL      FilHnd=open(%TRIM(patstr):
     C                             O_WRONLY+O_TRUNC+O_CREAT +O_CCSID   :
     C                             511: 1252     )
     C                   IF        FilHnd < *ZERO
     C                   callp     sysSndPgmMsg('CPF9897':'QCPFMSG   *LIBL':
     C                                          'No se pudo abrir el archivo '+
     C                                          'de Salida en IFS:'+
     C                                           %TRIM(patstr):    '*ESCAPE'   )
     C                   ENDIF
     c* ... Cerrarlo, para que tome el CSSID SINO QUEDA EBCDIC!!!!!
     c                   callp     close(FilHnd)
     c* ... Abrir nuevamente para trabajar
     c                   EVAL      FilHnd=open(%TRIM(patstr):
     C                             O_WRONLY+O_TEXTDATA)
     C                   IF        FilHnd < *ZERO
     C                   callp     sysSndPgmMsg('CPF9897':'QCPFMSG   *LIBL':
     C                                          'No se pudo abrir el archivo '+
     C                                          'de Salida en IFS:'+
     C                                           %TRIM(patstr):    '*ESCAPE'   )
     C                   ENDIF
     C*
     C     KCOMESA       KLIST
     C                   KFLD                    WWISUC
     C                   KFLD                    FECCOM
     C                   KFLD                    WWICTL
     C                   KFLD                    WWIRUR
     C                   KFLD                    WWIMCO
     C                   KFLD                    WWINCC
     C*
     C                   Z-ADD     99999         WWISUC            5 0
     C*
     C                   ENDSR
     C*----------------------------------------------------------------*
     C* LIMPIA - Limpia e inicializa campos
     C*----------------------------------------------------------------*
     C     LIMPIA        BEGSR
     C                   MOVE      *BLANK        DSTODO
     C                   MOVE      *BLANK        B9BLK0
     C                   ENDSR
     C*----------------------------------------------------------------*
     C* FINALI - Cierra Archivo en IFS
     C*----------------------------------------------------------------*
     C     FINALI        BEGSR
     c                   callp     close(FilHnd)
     C                   ENDSR
     C*----------------------------------------------------------------*
     C* SRPROC - Genera Código 32 BCRA
     C*----------------------------------------------------------------*
     C     SRPROC        BEGSR
     C                   Z-ADD     NQICDT        DSCDIS
     C                   Z-ADD     NQICEN        DSICEN
     C                   Z-ADD     NQIFEC        DSIFEC
     C                   Z-ADD     NQICCU        DSICCU
     C                   MOVEL     NQEFUP        DSISIG
     C                   Z-ADD     NQIIMP        DSIIMP
     C                   MOVEL     NQIRBC        DSIRBC
     C                   MOVEL     DSTODO        B9BLK0
     C                   WRITE     REBATEMP
     C                   EXSR      WRTTXT
     C                   ENDSR
     C*----------------------------------------------------------------*
     C* WRTTXT - Write Text File
     C*----------------------------------------------------------------*
     C     WRTTXT        BEGSR
     C                   MOVE      *BLANK        HDRBUF
     c                   eval      HDRBUF='0054*~*0309*~*0000*~*0000'
     C                   MOVE      *ZEROS        CHICCU           14
     C                   MOVE      NQICCU        CHICCU           14
     c                   eval      HDRBUF=%trim(HDRBUF)+'*~*'+CHICCU
     C                   EXSR      CALFEC
     c                   eval      HDRBUF=%trim(HDRBUF)+'*~*'+ FECUSA
     C                   IF        NQEFUP = ' '
     C                   MOVE      '0'           NQEFUP
     c                   ENDIF
     C                   EXSR      CALIMP
     c                   eval      HDRBUF=%trim(HDRBUF)+'*~*'+
     c                                                   NQEFUP +
     C                                    %SUBST(CHRIMP:  1: 15) +
     C                                    '.' +
     C                                    %SUBST(CHRIMP: 16:  2)
     c                   eval      HDRBUF=%trim(HDRBUF)+X'0D'+x'25'
     c                   CALLP     write(FilHnd: %addr(HdrBuf):
     C                                           %len(%trimr(HdrBuf)))
     C                   ENDSR
     C*---------------------------------------------------------------------
     C* CALCULA IMPORTE ACUMULANDO COMESA, DEVUELVE COMO CHAR DE 17
     C*---------------------------------------------------------------------
     C     CALIMP        BEGSR
     C                   Z-ADD     *ZERO         AUXIMP           17 2
     C     KCOMESA       CHAIN     RECOMESA                           25
     C     *IN25         DOWEQ     *OFF
     C                   ADD       HQ$SDI        AUXIMP
     C     KCOMESA       READE     RECOMESA                               25
     C                   ENDDO
     C                   MOVE      *ZEROS        CHRIMP           17
     C                   MOVE      AUXIMP        CHRIMP           17
     C                   ENDSR
     C*---------------------------------------------------------------------
     C     CALFEC        BEGSR
     C*
     C                   Z-ADD     *ZERO         FECINV
     C                   MOVEL     NQIFEC        FECINV
     C                   MOVE      01            DIAINV
     C                   Z-ADD     FECINV        FECOUT
     C                   CALL      'SBBAINFE'
     C                   PARM                    FECOUT
     C                   PARM      'IN'          EDTMDE            2
     C                   Z-ADD     FECOUT        FECAUX            8 0
     C                   Z-ADD     *ZERO         FECOUT            8 0
     C                   CALL      'SBBACFFM'
     C                   PARM                    FECAUX
     C                   PARM                    FECOUT
     C                   MOVE      FECOUT        FECNOR
     C                   MOVE      AÑONOR        AÑOUSA
     C                   MOVE      MESNOR        MESUSA
     C                   MOVE      DIANOR        DIAUSA
     C
     C                   MOVE      FECOUT        FECCOM            8 0
     C                   CALL      'SBBAINFE'
     C                   PARM                    FECCOM
     C                   PARM      'NI'          EDTMDE            2
     C*
     C                   ENDSR
     C*=====================================================================
     C* Declaración de Procedimientos
     C*=====================================================================
     P sysSndPgmMsg    B                   EXPORT
     D  sysSndPgmMsg   PI             4A
     D   msgID                        7A   CONST
     D   msgF                        20A   CONST OPTIONS(*NOPASS)
     D   msgDta                     256A   CONST OPTIONS(*NOPASS)
     D   msgTyp                      10A   CONST OPTIONS(*NOPASS)

     D MSGKEY          S              4A

     D Sndpm           PR                  ExtPgm('QMHSNDPM')
     D   MessageID                    7A   Const
     D   QualMsgF                    20A   Const
     D   MsgData                    256A   Const
     D   MsgDtaLen                   10I 0 Const
     D   MsgType                     10A   Const
     D   CallStkEnt                  10A   Const
     D   CallStkCnt                  10I 0 Const
     D   MessageKey                   4A
     D   ErrorCode                32766A   options(*varsize)


     D wwMsgLen        S             10I 0
     D wwMsgF          S             20A
     D wwMsgD          S            256A
     D wwTheKey        S              4A
     D wwMsgTyp        S             10A   INZ('*ESCAPE')

     c                   eval      wwMsgF='QCPFMSG   *LIBL     '
     c                   eval      wwMsgD=*BLANKS
     C                   if        %parms  >= 2
     c                   eval      wwMsgF=msgF
     c                   endif
     C                   if        %parms  >= 3
     c                   eval      wwMsgD=msgDta
     c                   endif
     C                   if        %parms  >= 4
     c                   eval      wwMsgTyp=msgTyp
     c                   endif
     c                   eval      wwMsgLen = %len(%trimr(wwMsgD))
     c                   callp     SndPm(msgID :wwMsgF     :
     c                                   wwMsgD: wwMsgLen: wwMsgTyp   :
     c                                   '*CTLBDY': 1: wwTheKey: SYSERR)

     C                   RETURN    wwTheKey

     P sysSndPgmMsg    E
     **-------------------------------------------------------------------------
